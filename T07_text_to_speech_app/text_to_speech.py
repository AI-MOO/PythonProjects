# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'TTS.ui'
#
# Created by: PyQt5 UI code generator 5.15.2
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from gtts import gTTS
import random

class Ui_MainWindow(object):
    def alertBox(self,title,message):
        alertMessage = QtWidgets.QMessageBox()
        alertMessage.setWindowTitle(title)
        alertMessage.setText(message)
        alertMessage.setStandardButtons(QtWidgets.QMessageBox.Ok)
        alertMessage.exec_()

    def textToSpeach(self):
        userText = str(self.textArea.toPlainText())

        if len(userText) == 0:
            self.alertBox('Blank','please write something to be converted to audio!!')
        else:
            language = "en-in"
            num = random.randrange(100,900,2)
            getFiveChars = userText[0:5]
            fileName = "output/" + str(num) + "-" + getFiveChars + ".mp3"
            file = gTTS(text = userText,lang = language,slow = False)
            saveFile =file.save(fileName)
            if saveFile != "" or saveFile !=None:
                self.alertBox('Success', 'Your text is converted to Audio')
            else:
                self.alertBox('Error','Something went wrong!')



    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(640, 480)
        MainWindow.setStyleSheet("background-position:center bottom;\n"
"background-image: url(:/newPrefix/11.png);\n"
"background-repeat:no-repeat;\n"
"background-attachment:fixed;")
        MainWindow.setAnimated(True)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.appTitle = QtWidgets.QLabel(self.centralwidget)
        self.appTitle.setGeometry(QtCore.QRect(60, 0, 581, 81))
        font = QtGui.QFont()
        font.setFamily("POLYA Regular")
        font.setPointSize(45)
        font.setBold(False)
        font.setItalic(False)
        font.setWeight(50)
        self.appTitle.setFont(font)
        self.appTitle.setStyleSheet("color:rgb(0, 254, 252);\n"
"font: 45pt \"POLYA Regular\";\n"
"background-image: url(none);")
        self.appTitle.setObjectName("appTitle")
        self.textArea = QtWidgets.QPlainTextEdit(self.centralwidget)
        self.textArea.setGeometry(QtCore.QRect(80, 220, 491, 141))
        self.textArea.setStyleSheet("font-family:Agne;\n"
"padding:8px;\n"
"color:rgb(252, 252, 252);\n"
"font-size:20px;\n"
"border-radius:15px;\n"
"border:2px solid white;\n"
"background:rgb(59, 15, 171);")
        self.textArea.setPlainText("")
        self.textArea.setObjectName("textArea")
        self.convertBtn = QtWidgets.QPushButton(self.centralwidget)
        self.convertBtn.setGeometry(QtCore.QRect(230, 390, 201, 41))
        self.convertBtn.setStyleSheet("font-family:Agne;\n"
"padding:8px;\n"
"color:rgb(0, 254, 252);\n"
"font-size:20px;\n"
"border-radius:15px;\n"
"border:2px solid white;\n"
"background:rgb(59, 15, 171);")
        self.convertBtn.setObjectName("convertBtn")
        MainWindow.setCentralWidget(self.centralwidget)
        self.convertBtn.clicked.connect(self.textToSpeach)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "Text to Speech"))
        self.appTitle.setText(_translate("MainWindow", "Text To Speech "))
        self.convertBtn.setText(_translate("MainWindow", "Convert to Audio"))
import source


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
